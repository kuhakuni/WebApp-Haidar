@page "/login"
@using WebApp.Models
@using System.ComponentModel.DataAnnotations
@inject IJSRuntime JS
<div class="login">
    <div class="row d-flex justify-content-center align-items-center">
        <div class="col-md-5" data-aos="zoom-out">
            <img src="./assets/img/img-login.svg"
                 alt="Login img"
                 class="img-fluid"
                 width="800" />
        </div>
        <div class="col-md-5 d-flex justify-content-end">
            <div class="w-75 d-flex align-items-center flex-column">
                <div>
                    <h1 class="title fw-semibold text-center" data-aos="fade-up">
                        Welcome Back👋
                    </h1>
                    <p class="fs-5 mb-4 text-center"
                       data-aos="fade-up"
                       data-aos-delay="200">
                        Enter your email and password to continue.
                    </p>
                    <p id="error-message"
                       class="text-danger text-center fw-semibold"
                       data-aos="fade-up"
                       data-aos-delay="200">@errorMessage</p>
                </div>
                <EditForm method="post" FormName="formLogin" Model="@loginModel" OnValidSubmit="handleLogin" class="w-100 d-flex flex-column" data-aos="fade-up" data-aos-delay="400">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" placeholder="Enter your email" />
                        <ValidationMessage For="@(() => loginModel.Email)" />
                    </div>
                    <div class="mb-5">
                        <label for="password" class="form-label">Password</label>
                        <InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" placeholder="Enter your password" required />
                    </div>
                    <button type="submit" class="btn btn-login rounded-5">Login</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private bool isRendered = false;
    [Inject]
    private HttpClient Http { get; set; }

    [SupplyParameterFromForm]
    private LoginModel loginModel { get; set; } = new LoginModel();

    [Inject]
    private NavigationManager Navigation { get; set; }

    private string errorMessage;

    private async Task handleLogin()
    {
        try
        {
            var loginRequest = new
            {
                email = loginModel.Email,
                password = loginModel.Password
            };

            var response = await Http.PostAsJsonAsync("https://todo-api.bestcar.id/api/v1/auth/authentication", loginRequest);

            if (response.IsSuccessStatusCode)
            {
                var loginResponse = await response.Content.ReadFromJsonAsync<LoginResponse>();

                if (loginResponse != null && loginResponse.Status == 200)
                {
                    Navigation.NavigateTo("/home");
                }
                else
                {
                    errorMessage = "Login failed: " + loginResponse?.Message ?? "Unknown error";
                }
            }
            else
            {
                // Handle HTTP error
                errorMessage = "Login failed: " + response.ReasonPhrase;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
            // Handle exceptions
            errorMessage = "Login Failed";
        }
    }

    // LoginModel class
    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email format.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; }
    }

}
